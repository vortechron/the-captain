apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "golang.fullname" . }}
  labels:
    {{- include "golang.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "golang.selectorLabels" . | nindent 6 }}
      golang.app/pod-type: web
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "golang.selectorLabels" . | nindent 8 }}
        golang.app/pod-type: web
    spec:
      volumes:
        {{- if .Values.app.envSecretName }}
        - name: env
          secret:
            secretName: {{ .Values.app.envSecretName }}
        {{- end }}
        {{- if .Values.configMap.enabled }}
        - name: config-volume
          configMap:
            name: {{ include "golang.fullname" . }}-config
        {{- end }}
        {{- if .Values.secret.enabled }}
        - name: secret-volume
          secret:
            secretName: {{ include "golang.fullname" . }}-secret
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      serviceAccountName: {{ include "golang.serviceAccountName" . }}

      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      {{- with .Values.extraInitContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      containers:
        {{- with .Values.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.app.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.app.image.pullPolicy }}
          {{- if .Values.app.command }}
          command:
            {{- toYaml .Values.app.command | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- if .Values.configMap.enabled }}
            - name: config-volume
              mountPath: /app/config
            {{- end }}
            {{- if .Values.secret.enabled }}
            - name: secret-volume
              mountPath: /app/secrets
              readOnly: true
            {{- end }}
            {{- with .Values.app.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- if .Values.app.healthcheck.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.app.healthcheck.path }}
              port: http
            initialDelaySeconds: {{ .Values.app.healthcheck.period }}
            periodSeconds: {{ .Values.app.healthcheck.period }}
          livenessProbe:
            httpGet:
              path: {{ .Values.app.healthcheck.path }}
              port: http
            initialDelaySeconds: {{ .Values.app.healthcheck.period }}
            periodSeconds: {{ .Values.app.healthcheck.period }}
          {{- end }}
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          env:
            {{- with .Values.app.extraEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }} 